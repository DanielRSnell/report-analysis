-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.Slugs (
  slug text NOT NULL,
  ticket_count integer DEFAULT 0,
  first_seen timestamp with time zone DEFAULT now(),
  last_seen timestamp with time zone DEFAULT now(),
  ticket_ids ARRAY DEFAULT ARRAY[]::bigint[],
  match boolean,
  matched_documents jsonb,
  matched_search text,
  last_matched timestamp with time zone,
  CONSTRAINT Slugs_pkey PRIMARY KEY (slug)
);
CREATE TABLE public.Ticket_Recommendations (
  id integer NOT NULL DEFAULT nextval('"Ticket_Recommendations_id_seq"'::regclass),
  ticket_id bigint NOT NULL,
  slug text,
  recommendation_type text,
  recommended_action text,
  priority text,
  matched_articles jsonb,
  confidence_score numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT Ticket_Recommendations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.Ticket_Reports (
  Ticket Id bigint NOT NULL,
  subject text,
  total_messages integer,
  support_replies integer,
  customer_replies integer,
  support_follow_ups integer,
  customer_follow_ups integer,
  private_notes integer,
  back_and_forth_count integer,
  first_support_response_time_ms bigint,
  avg_support_response_time_ms bigint,
  longest_wait_for_support_ms bigint,
  support_response_count integer,
  avg_customer_response_time_ms bigint,
  longest_wait_for_customer_ms bigint,
  customer_response_count integer,
  waiting_on text,
  current_wait_time_ms bigint,
  last_support_response timestamp with time zone,
  last_customer_response timestamp with time zone,
  resolution_time_ms bigint,
  messages_per_hour numeric,
  complexity text,
  complexity_score integer,
  required_follow_up boolean,
  one_touch_resolution boolean,
  support_response_within_1hr boolean,
  support_response_within_4hr boolean,
  support_response_within_24hr boolean,
  avg_support_response_within_2hr boolean,
  support_engagement_ratio numeric,
  customer_engagement_ratio numeric,
  red_flags ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT Ticket_Reports_pkey PRIMARY KEY (Ticket Id),
  CONSTRAINT Ticket_Reports_Ticket Id_fkey FOREIGN KEY (Ticket Id) REFERENCES public.Tickets(Ticket Id)
);
CREATE TABLE public.Tickets (
  Approval Status text,
  Association type text,
  Category text,
  Category - Accounting text,
  Closed Time timestamp with time zone,
  Created Time timestamp with time zone,
  Department text,
  Description text,
  Ticket Id bigint NOT NULL,
  Due by Time timestamp with time zone,
  First Response Time (in Hrs) text,
  First Response Status text,
  Initial Response Time text,
  Group text,
  Impact text,
  Customer interactions bigint,
  Item text,
  Agent interactions text,
  Priority text,
  Requester Email text,
  Requester Location text,
  Requester Name text,
  Requester VIP boolean,
  Resolution Note text,
  Resolution Status text,
  Resolution Time (in Hrs) text,
  Resolved Time timestamp with time zone,
  Agent text,
  Source text,
  Status text,
  Sub-Category text,
  Sub-Category_1 text,
  Subject text,
  Survey Result text,
  Tags text,
  Type text,
  Time Tracked text,
  Last Updated Time timestamp with time zone,
  Urgency text,
  Workspace text,
  conversations text,
  rollup jsonb,
  Report jsonb,
  slug text,
  Modified boolean,
  CONSTRAINT Tickets_pkey PRIMARY KEY (Ticket Id)
);
CREATE TABLE public.kb_recommendation_sections (
  section_id integer NOT NULL DEFAULT nextval('kb_recommendation_sections_section_id_seq'::regclass),
  recommendation_id integer NOT NULL,
  section_number integer NOT NULL,
  section_title text NOT NULL,
  section_type text,
  content_outline text NOT NULL,
  source_info text,
  estimated_time text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT kb_recommendation_sections_pkey PRIMARY KEY (section_id),
  CONSTRAINT kb_recommendation_sections_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.kb_recommendations(recommendation_id)
);
CREATE TABLE public.kb_recommendation_tickets (
  recommendation_id integer NOT NULL,
  ticket_id bigint NOT NULL,
  contribution_type text,
  relevance_score numeric,
  notes text,
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT kb_recommendation_tickets_pkey PRIMARY KEY (recommendation_id, ticket_id),
  CONSTRAINT kb_recommendation_tickets_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.kb_recommendations(recommendation_id),
  CONSTRAINT kb_recommendation_tickets_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.Tickets(Ticket Id)
);
CREATE TABLE public.kb_recommendations (
  recommendation_id integer NOT NULL DEFAULT nextval('kb_recommendations_recommendation_id_seq'::regclass),
  slug text NOT NULL,
  title text NOT NULL,
  status text DEFAULT 'draft'::text,
  priority text NOT NULL,
  confidence_score numeric,
  ticket_pattern text,
  frequency_data jsonb,
  affected_user_groups ARRAY,
  keywords ARRAY,
  related_slugs ARRAY,
  success_criteria jsonb,
  analyst_notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  last_analyzed timestamp with time zone,
  CONSTRAINT kb_recommendations_pkey PRIMARY KEY (recommendation_id),
  CONSTRAINT kb_recommendations_slug_fkey FOREIGN KEY (slug) REFERENCES public.Slugs(slug)
);
CREATE TABLE public.slug_analysis_progress (
  slug text NOT NULL,
  total_tickets integer,
  tickets_analyzed integer DEFAULT 0,
  last_ticket_id bigint,
  kb_searches_performed integer DEFAULT 0,
  status text DEFAULT 'in_progress'::text,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  error_message text,
  CONSTRAINT slug_analysis_progress_pkey PRIMARY KEY (slug),
  CONSTRAINT slug_analysis_progress_slug_fkey FOREIGN KEY (slug) REFERENCES public.Slugs(slug)
);
CREATE TABLE public.ticket_kb_content_recommendations (
  id integer NOT NULL DEFAULT nextval('ticket_kb_content_recommendations_id_seq'::regclass),
  ticket_id bigint NOT NULL,
  slug text,
  recommendation_title text NOT NULL,
  recommendation_summary text,
  recommendation_type text,
  priority text CHECK (priority = ANY (ARRAY['high'::text, 'medium'::text, 'low'::text])),
  source_ticket_ids ARRAY,
  tags ARRAY,
  status text DEFAULT 'draft'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_kb_content_recommendations_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_kb_content_recommendations_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.Tickets(Ticket Id)
);
CREATE TABLE public.ticket_kb_content_sections (
  id integer NOT NULL DEFAULT nextval('ticket_kb_content_sections_id_seq'::regclass),
  recommendation_id integer NOT NULL,
  section_order integer NOT NULL,
  section_title text NOT NULL,
  section_content text NOT NULL,
  source_ticket_ids ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_kb_content_sections_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_kb_content_sections_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES public.ticket_kb_content_recommendations(id)
);
CREATE TABLE public.tickets_reviewed (
  id integer NOT NULL DEFAULT nextval('tickets_reviewed_id_seq'::regclass),
  ticket_id bigint NOT NULL UNIQUE,
  slug text,
  related_ticket_ids ARRAY,
  related_ticket_count integer DEFAULT 0,
  kb_hit boolean NOT NULL,
  searches ARRAY,
  matched_documents jsonb,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tickets_reviewed_pkey PRIMARY KEY (id),
  CONSTRAINT tickets_reviewed_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.Tickets(Ticket Id)
);