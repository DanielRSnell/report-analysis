---
export const prerender = false;

import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import HitMissBadge from '../../../components/HitMissBadge.astro';
import { supabase } from '../../../lib/supabase';

// Get filter params from URL
const url = new URL(Astro.request.url);
const slugFilter = url.searchParams.get('slug') || '';
const hitMissFilter = url.searchParams.get('status');

// Build query
let query = supabase
  .from('tickets_reviewed')
  .select('id, ticket_id, slug, kb_hit, created_at, related_ticket_count, searches_performed, Tickets(Subject)', { count: 'exact' })
  .order('created_at', { ascending: false });

// Apply filters
if (slugFilter) {
  query = query.ilike('slug', `%${slugFilter}%`);
}
if (hitMissFilter === 'hit') {
  query = query.eq('kb_hit', true);
} else if (hitMissFilter === 'miss') {
  query = query.eq('kb_hit', false);
}

const { data: reviews, count } = await query;

// Get unique slugs for filter dropdown
const { data: allReviews } = await supabase
  .from('tickets_reviewed')
  .select('slug')
  .not('slug', 'is', null);

const uniqueSlugs = [...new Set(allReviews?.map(r => r.slug) || [])].sort();
---

<Layout title="Reviewed Tickets">
  <Header current="ticket-analysis" />

  <main class="max-w-7xl mx-auto px-6">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center gap-4 mb-2">
        <a href="/ticket-analysis" class="text-sm text-gray-500 hover:text-gray-900">‚Üê Back to Dashboard</a>
      </div>
      <h1 class="text-4xl font-semibold tracking-tight mb-2">Reviewed Tickets</h1>
      <p class="text-gray-600">Browse all tickets that have been analyzed for KB coverage</p>
    </div>

    <!-- Filters -->
    <div class="bg-white border border-gray-200 rounded-lg p-4 mb-6">
      <form method="get" class="flex flex-wrap gap-4 items-end">
        <div class="flex-1 min-w-[200px]">
          <label for="slug" class="block text-sm font-medium text-gray-700 mb-1">Filter by Slug</label>
          <input
            type="text"
            id="slug"
            name="slug"
            value={slugFilter}
            placeholder="Enter slug..."
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        <div class="min-w-[150px]">
          <label for="status" class="block text-sm font-medium text-gray-700 mb-1">KB Status</label>
          <select
            id="status"
            name="status"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="">All</option>
            <option value="hit" selected={hitMissFilter === 'hit'}>Hit</option>
            <option value="miss" selected={hitMissFilter === 'miss'}>Miss</option>
          </select>
        </div>
        <div class="flex gap-2">
          <button
            type="submit"
            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
          >
            Apply Filters
          </button>
          <a
            href="/ticket-analysis/reviewed"
            class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors"
          >
            Clear
          </a>
        </div>
      </form>
    </div>

    <!-- Results Count -->
    <div class="mb-4 text-sm text-gray-600">
      Showing {reviews?.length || 0} {count !== null && `of ${count}`} tickets
    </div>

    <!-- Data Table -->
    <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
      {reviews && reviews.length > 0 ? (
        <table class="w-full">
          <thead class="bg-gray-50 border-b border-gray-200">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ticket ID</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Subject</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Slug</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Related</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Searches</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
            {reviews.map((review: any) => (
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4">
                  <a href={`/ticket-analysis/reviewed/${review.id}`} class="font-mono text-sm text-blue-600 hover:underline">
                    #{review.ticket_id}
                  </a>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900 max-w-md truncate">
                  {review.Tickets?.Subject || 'N/A'}
                </td>
                <td class="px-6 py-4 text-sm">
                  <span class="font-mono text-xs bg-gray-100 px-2 py-1 rounded">{review.slug}</span>
                </td>
                <td class="px-6 py-4 text-sm text-gray-600 text-center">
                  {review.related_ticket_count || 0}
                </td>
                <td class="px-6 py-4 text-sm text-gray-600 text-center">
                  {review.searches_performed || 0}
                </td>
                <td class="px-6 py-4">
                  <HitMissBadge hit={review.kb_hit} />
                </td>
                <td class="px-6 py-4 text-sm text-gray-500">
                  {new Date(review.created_at).toLocaleDateString()}
                </td>
                <td class="px-6 py-4">
                  <a
                    href={`/ticket-analysis/reviewed/${review.id}`}
                    class="text-sm text-blue-600 hover:underline"
                  >
                    View Details
                  </a>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      ) : (
        <div class="p-12 text-center">
          <div class="text-4xl mb-4 opacity-30">üîç</div>
          <h3 class="text-lg font-semibold mb-2">No tickets found</h3>
          <p class="text-gray-600 text-sm">
            {slugFilter || hitMissFilter ? 'Try adjusting your filters' : 'No tickets have been reviewed yet'}
          </p>
        </div>
      )}
    </div>
  </main>
</Layout>
