---
export const prerender = false;

import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import PriorityBadge from '../../../components/PriorityBadge.astro';
import StatusBadge from '../../../components/StatusBadge.astro';
import { supabase } from '../../../lib/supabase';
import { marked } from 'marked';

const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/ticket-analysis/recommendations');
}

// Fetch recommendation with all sections
const { data: recommendation, error } = await supabase
  .from('ticket_kb_content_recommendations')
  .select(`
    *,
    ticket_kb_content_sections(*)
  `)
  .eq('id', id)
  .single();

if (error || !recommendation) {
  return Astro.redirect('/ticket-analysis/recommendations');
}

// Sort sections by section_order
const sections = (recommendation.ticket_kb_content_sections || []).sort(
  (a: any, b: any) => (a.section_order || 0) - (b.section_order || 0)
);

// Fetch source ticket details
let sourceTickets = [];
if (recommendation.source_ticket_ids && Array.isArray(recommendation.source_ticket_ids) && recommendation.source_ticket_ids.length > 0) {
  const { data } = await supabase
    .from('Tickets')
    .select('"Ticket Id", Subject, Status, "Resolution Note"')
    .in('Ticket Id', recommendation.source_ticket_ids);
  sourceTickets = data || [];
}

// Fetch the original review
const { data: review } = await supabase
  .from('tickets_reviewed')
  .select('*')
  .eq('ticket_id', recommendation.ticket_id)
  .maybeSingle();

// Parse tags if it's a string
let tags = [];
if (recommendation.tags) {
  tags = typeof recommendation.tags === 'string'
    ? JSON.parse(recommendation.tags)
    : (Array.isArray(recommendation.tags) ? recommendation.tags : []);
}
---

<Layout title={recommendation.recommendation_title}>
  <Header current="ticket-analysis" />

  <main class="max-w-4xl mx-auto px-6">
    <!-- Back Button -->
    <div class="mb-6">
      <a href="/ticket-analysis/recommendations" class="text-sm text-gray-500 hover:text-gray-900">
        ← Back to Recommendations
      </a>
    </div>

    <!-- Header Section -->
    <div class="mb-8">
      <div class="flex items-start justify-between mb-4">
        <div class="flex-1">
          <h1 class="text-4xl font-semibold tracking-tight mb-3">
            {recommendation.recommendation_title}
          </h1>
          <div class="flex flex-wrap gap-2">
            <StatusBadge status={recommendation.status} />
            <PriorityBadge priority={recommendation.priority} />
            {recommendation.recommendation_type && (
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-50 text-blue-600">
                {recommendation.recommendation_type}
              </span>
            )}
          </div>
        </div>
      </div>

      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-4">
          {tags.map((tag: string) => (
            <span class="inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-700">
              #{tag}
            </span>
          ))}
        </div>
      )}

      <div class="grid md:grid-cols-3 gap-4">
        <div class="p-4 bg-gray-50 rounded-md">
          <div class="text-xs text-gray-500 uppercase tracking-wide mb-1">Slug</div>
          <div class="font-mono text-sm">{recommendation.slug}</div>
        </div>
        <div class="p-4 bg-gray-50 rounded-md">
          <div class="text-xs text-gray-500 uppercase tracking-wide mb-1">Created</div>
          <div class="text-sm">{new Date(recommendation.created_at).toLocaleDateString()}</div>
        </div>
        <div class="p-4 bg-gray-50 rounded-md">
          <div class="text-xs text-gray-500 uppercase tracking-wide mb-1">Sections</div>
          <div class="text-2xl font-semibold">{sections.length}</div>
        </div>
      </div>
    </div>

    <!-- Summary Section -->
    {recommendation.recommendation_summary && (
      <section class="mb-8">
        <div class="bg-white border border-gray-200 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Summary</h2>
          <div class="prose prose-sm max-w-none" set:html={marked.parse(recommendation.recommendation_summary, { async: false })} />
        </div>
      </section>
    )}

    <!-- Source Tickets Section -->
    {sourceTickets.length > 0 && (
      <section class="mb-8">
        <div class="bg-white border border-gray-200 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Source Tickets ({sourceTickets.length})</h2>
          <div class="space-y-2">
            {sourceTickets.map((ticket: any) => (
              <div class="p-3 bg-gray-50 rounded">
                <div class="flex items-center justify-between mb-1">
                  <span class="font-mono text-sm font-medium">#{ticket['Ticket Id']}</span>
                  <span class="text-xs text-gray-500">{ticket.Status}</span>
                </div>
                <div class="text-sm text-gray-700">{ticket.Subject}</div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Content Sections -->
    {sections.length > 0 && (
      <section class="mb-8">
        <div class="bg-white border border-gray-200 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-6">Content Sections ({sections.length})</h2>
          <div class="space-y-6">
            {sections.map((section: any, index: number) => (
              <div class="border-b border-gray-200 pb-6 last:border-0 last:pb-0">
                <div class="flex items-start gap-3 mb-3">
                  <span class="text-sm font-semibold text-blue-500 min-w-[24px]">{index + 1}.</span>
                  <div class="flex-1">
                    <h3 class="text-lg font-semibold mb-2">{section.section_title}</h3>
                    {section.section_type && (
                      <span class="inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-600 mb-3">
                        {section.section_type}
                      </span>
                    )}
                    {section.section_content && (
                      <div class="prose prose-sm max-w-none mt-3" set:html={marked.parse(section.section_content, { async: false })} />
                    )}
                    {section.source_ticket_ids && Array.isArray(section.source_ticket_ids) && section.source_ticket_ids.length > 0 && (
                      <div class="mt-3 text-xs text-gray-500">
                        <span class="font-medium">Source Tickets:</span> {section.source_ticket_ids.map((tid: number) => `#${tid}`).join(', ')}
                      </div>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Implementation Notes -->
    {recommendation.implementation_notes && (
      <section class="mb-8">
        <div class="bg-white border border-gray-200 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Implementation Notes</h2>
          <div class="prose prose-sm max-w-none" set:html={marked.parse(recommendation.implementation_notes, { async: false })} />
        </div>
      </section>
    )}

    <!-- Related Review -->
    {review && (
      <section class="mb-8">
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 class="text-sm font-semibold text-blue-900 mb-2">Related Ticket Review</h3>
          <p class="text-sm text-blue-700 mb-3">
            This recommendation was created from ticket #{review.ticket_id}
          </p>
          <a
            href={`/ticket-analysis/reviewed/${review.id}`}
            class="text-sm text-blue-600 hover:underline"
          >
            View Original Review →
          </a>
        </div>
      </section>
    )}

    <!-- Actions -->
    <section class="mb-8">
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-4">Actions</h2>
        <div class="flex flex-wrap gap-3">
          <button
            onclick="window.print()"
            class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors text-sm"
          >
            Print / Save as PDF
          </button>
          <button
            onclick="navigator.clipboard.writeText(document.querySelector('main').innerText)"
            class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors text-sm"
          >
            Copy to Clipboard
          </button>
        </div>
      </div>
    </section>

    <!-- Metadata -->
    <section class="mb-8">
      <div class="bg-gray-50 border border-gray-200 rounded-lg p-6">
        <h3 class="text-sm font-semibold mb-4">Metadata</h3>
        <dl class="grid md:grid-cols-2 gap-4 text-sm">
          <div>
            <dt class="text-gray-500 mb-1">Created</dt>
            <dd class="font-medium">{new Date(recommendation.created_at).toLocaleString()}</dd>
          </div>
          <div>
            <dt class="text-gray-500 mb-1">Last Updated</dt>
            <dd class="font-medium">{new Date(recommendation.updated_at).toLocaleString()}</dd>
          </div>
          <div>
            <dt class="text-gray-500 mb-1">Recommendation ID</dt>
            <dd class="font-mono text-xs">{recommendation.id}</dd>
          </div>
          <div>
            <dt class="text-gray-500 mb-1">Ticket ID</dt>
            <dd class="font-mono">{recommendation.ticket_id}</dd>
          </div>
        </dl>
      </div>
    </section>
  </main>
</Layout>
